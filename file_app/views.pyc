from rest_framework.views import APIView
from rest_framework.parsers import MultiPartParser, FormParser, FileUploadParser
from rest_framework.response import Response
from rest_framework import status
from .serializers import FileSerializer, DetailSerializer
from rest_framework import viewsets
import pandas as pd
from .models import Detail, File
from django.http import HttpResponse
import json
from .Dynamic_rule import *

class DetailView(viewsets.ModelViewSet):
    queryset = Detail.objects.all()
    serializer_class = DetailSerializer
    def get(self, request):
        articles = Detail.objects.all(data=request.data)
        serializer = DetailSerializer(articles, many=True)
        return Response(serializer.data)

class FileView(APIView):
    parser_classes = (MultiPartParser, FormParser, FileUploadParser)

    def post(self, request, *args, **kwargs):
        # print (request.data)
        file_serializer = FileSerializer(data=request.data)
        if file_serializer.is_valid():
            file_serializer.save()
        return Response(status=status.HTTP_201_CREATED)


class DownloadView(APIView):
    def get(self, request):
        # req = Detail.objects.all()
        # serializer = DetailSerializer(req, many=True)

        # df = pd.read_excel('fileupload/media/' + f, sheet_name=s, header=r)
        # # address = ['MALAD', 'ANDHERI', 'BORIVALI', 'MALAD', 'THANE', 'DADAR', 'BANDRA']
        # # df['new'] = address
        out = df.to_json(orient='records')
        dict={"excelData": out, "sheetName": s,"filename":f}
        return HttpResponse(json.dumps(dict), status=status.HTTP_201_CREATED)
